name: Create release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Release pushed branch
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create zip file
        run: zip -r release.zip .

      - name: Get version from package.json
        id: get_version
        run: echo "::set-output name=VERSION::$(jq -r .version < package.json)"

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.get_version.outputs.VERSION }}
          response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\": \"$tag\", \"target_commitish\": \"main\", \"name\": \"$tag\", \"body\": \"Release for commit $GITHUB_SHA\", \"draft\": false, \"prerelease\": false}" \
            https://api.github.com/repos/${{ github.repository }}/releases)
          echo "$response" | jq -r '.id'

          - name: Upload release asset
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            release_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.id')
            zip_file="${{ steps.get_version.outputs.VERSION }}-version.zip"
            if [ -f "$zip_file" ]; then
              curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/zip" \
                --data-binary @$zip_file \
                "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$zip_file"
            else
              echo "No zip file found with the version number in the name."
            fi
